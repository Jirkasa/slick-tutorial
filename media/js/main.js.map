{"mappings":"UAAwBA,EAAwBC,EAAeC,GAC3D,IAAKF,EAAwB,MAAM,IAAIG,MAAK,0CAC5C,IAAKF,EAAe,MAAM,IAAIE,MAAK,gCACnC,IAAKD,EAAgB,MAAM,IAAIC,MAAK,6CAenB,IAAIC,sBAbJ,UAAaC,IACrBA,EAAMC,eAGPL,EAAcM,UAAUC,OAAON,GAF/BD,EAAcM,UAAUE,IAAIP,KAMpB,CACZQ,KAAM,KACNC,UAAW,IAINC,QAAQZ,GCdrBa,CAHwBC,SAASC,cAAa,qBAC/BD,SAASC,cAAa,UAEK","sources":["media/js/modules/stickyHeader.js","media/js/main.js"],"sourcesContent":["export default function(headerContainerElement, headerElement, stickyCSSClass) {\r\n    if (!headerContainerElement) throw new Error('no header container element was passed');\r\n    if (!headerElement) throw new Error('no header element was passed');\r\n    if (!stickyCSSClass) throw new Error('no sticky CSS class for header was passed');\r\n\r\n    const obsCallback = function([entry]) {\r\n        if (!entry.isIntersecting) {\r\n            headerElement.classList.add(stickyCSSClass);\r\n        } else {\r\n            headerElement.classList.remove(stickyCSSClass);\r\n        }\r\n    }\r\n\r\n    const obsOptions = {\r\n        root: null, // intersection will be with viewport\r\n        threshold: 0\r\n    };\r\n\r\n    const observer = new IntersectionObserver(obsCallback, obsOptions);\r\n    observer.observe(headerContainerElement);\r\n}","import createStickyHeader from './modules/stickyHeader.js';\r\n\r\nconst headerContainer = document.querySelector('.header-container');\r\nconst header = document.querySelector('header');\r\n\r\ncreateStickyHeader(headerContainer, header, 'header--fixed');"],"names":["headerContainerElement","headerElement","stickyCSSClass","Error","IntersectionObserver","entry","isIntersecting","classList","remove","add","root","threshold","observe","$d9c19e24246736c2$export$9099ad97b570f7c","document","querySelector"],"version":3,"file":"index.b1caedd6.js.map"}